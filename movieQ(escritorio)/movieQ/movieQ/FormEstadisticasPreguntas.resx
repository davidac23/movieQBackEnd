<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonMostrarEstadistica.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABSAakDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwCj
        GMmnbMf/AFqanWpE611R2P5Z5iRDinQ8VHUidq0hsSSVJ2pmfl/Gn9qoCQdKcnWmjpTk61tGVgJE61In
        Wo061InWuiPciSsrjox0qZDxUadakTrVBJWsOp46CmVIOlVyiHoeKWmp1p3WrjuKWxJ2o60dqcg5rXlI
        HDpQvWinJ1qgH5+X8aTrRTk60AO7U5BzTetSDpWhctgooorQgKKKKACg9aKD1raOwD0+7S0ifdpaouWx
        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
        q/jRRRW0QP/Z
</value>
  </data>
</root>